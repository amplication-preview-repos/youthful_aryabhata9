/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Word as PrismaWord } from "@prisma/client";

export class WordServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.WordCountArgs, "select">): Promise<number> {
    return this.prisma.word.count(args);
  }

  async words(args: Prisma.WordFindManyArgs): Promise<PrismaWord[]> {
    return this.prisma.word.findMany(args);
  }
  async word(args: Prisma.WordFindUniqueArgs): Promise<PrismaWord | null> {
    return this.prisma.word.findUnique(args);
  }
  async createWord(args: Prisma.WordCreateArgs): Promise<PrismaWord> {
    return this.prisma.word.create(args);
  }
  async updateWord(args: Prisma.WordUpdateArgs): Promise<PrismaWord> {
    return this.prisma.word.update(args);
  }
  async deleteWord(args: Prisma.WordDeleteArgs): Promise<PrismaWord> {
    return this.prisma.word.delete(args);
  }
}
