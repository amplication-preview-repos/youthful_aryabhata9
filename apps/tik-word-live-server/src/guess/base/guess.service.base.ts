/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Guess as PrismaGuess } from "@prisma/client";

export class GuessServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.GuessCountArgs, "select">): Promise<number> {
    return this.prisma.guess.count(args);
  }

  async guesses(args: Prisma.GuessFindManyArgs): Promise<PrismaGuess[]> {
    return this.prisma.guess.findMany(args);
  }
  async guess(args: Prisma.GuessFindUniqueArgs): Promise<PrismaGuess | null> {
    return this.prisma.guess.findUnique(args);
  }
  async createGuess(args: Prisma.GuessCreateArgs): Promise<PrismaGuess> {
    return this.prisma.guess.create(args);
  }
  async updateGuess(args: Prisma.GuessUpdateArgs): Promise<PrismaGuess> {
    return this.prisma.guess.update(args);
  }
  async deleteGuess(args: Prisma.GuessDeleteArgs): Promise<PrismaGuess> {
    return this.prisma.guess.delete(args);
  }
}
